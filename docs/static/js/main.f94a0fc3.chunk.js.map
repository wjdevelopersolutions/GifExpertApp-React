{"version":3,"sources":["components/AddCategories.js","helpers/index.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","helpers","getGif","category","a","url","encodeURI","fetch","response","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAExCC,EAFwC,KAE5BC,EAF4B,KAiBhD,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,QAAU,IAC7BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,SAjBa,SAACN,GACtBF,EAAcE,EAAEO,OAAOC,QAiBfA,MAAOX,O,+BCzBjBY,EAAU,GAEhBA,EAAQC,OAAR,uCAAiB,WAAOC,GAAP,uBAAAC,EAAA,6DAEPC,EAFO,0FAEmFC,UAAWH,GAF9F,sBAGUI,MAAMF,GAHhB,cAGPG,EAHO,gBAIUA,EAASC,OAJnB,uBAILC,EAJK,EAILA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV7B,kBAcNM,GAdM,4CAAjB,sDAiBeV,QChBFiB,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OAAO,sBAAKc,UAAU,yCAAf,UACH,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,kCAAMA,EAAN,WCDKO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHd,SAACA,GAAc,IAAD,EAETf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAmBrC,OAZAC,qBAAU,WAENzB,EAAQC,OAAOC,GACVwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDd0BK,CAAa1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OAAO,qCACH,mCAAOpB,EAAP,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAkB,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIhB,aESnBiB,EAtBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,qCACI,gDACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBAGI6C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,U,MCV9B8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f94a0fc3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategories = ({ setCategories }) => {\n\n    const [ inputValue, setInputValue ] = useState('')\n\n    const handleInputValue = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length >= 2 ) {\n            setCategories(cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                onChange={handleInputValue}\n                value={inputValue}\n            />\n        </form>\n    )\n}\n\nAddCategories.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","const helpers = {}\n\nhelpers.getGif = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=2an3mIHkOKpVQRYL2AX4uYDa1Aoetdjm&q=${ encodeURI( category ) }&limit=10`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n\n    const gifs = data.map(gif => {\n        return {\n            id: gif.id,\n            title: gif.title,\n            url: gif.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}\n\nexport default helpers;\n","import React from 'react';\n\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return <div className=\"card animate__animated animate__fadeIn\">\n        <img src={ url } alt={title} />\n        <p> { title } </p>\n    </div>\n\n}\n","import React from 'react';\n\nimport { useFetchGif } from '../hooks/useFetchGif';\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGif( category );\n\n    return <>\n        <h3> { category } </h3>\n        { loading && <p className=\"animate__animated animate__flash\">Loading ...</p> }\n        <div className=\"card-grid\">\n            {\n                images.map( img => (\n                    <GifGridItem\n                        key={ img.id }\n                        { ...img }\n                    />\n                ))\n            }\n        </div>\n    </>\n}\n","import { useState, useEffect } from 'react';\nimport helpers from '../helpers';\n\nexport const useFetchGif = (category) => {\n\n    const [ state, setState ] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        helpers.getGif(category)\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    }, [ category ]);\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategories } from './components/AddCategories';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>Gif expert app</h2>\n            <AddCategories setCategories={setCategories} />\n            <hr />\n\n            {\n                categories.map(category => (\n                    <GifGrid\n                        key={ category }\n                        category={ category }\n                    />\n                ))\n            }\n        </>\n    );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}